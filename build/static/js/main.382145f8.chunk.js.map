{"version":3,"sources":["components/ChatRoom/index.js","store/features/userNameSlice.js","store/index.js","components/Join/index.js","components/ChatRoom/components/InfoBar/index.js","components/ChatRoom/components/Input/index.js","components/ChatRoom/components/MessagesShowCase/Message.js","components/ChatRoom/components/MessagesShowCase/index.js","App.js","index.js"],"names":["socket","userNameHandler","createSlice","name","initialState","username","reducers","setUserName","state","action","payload","actions","configureStore","reducer","userNameReducer","Join","location","useSelector","dispatch","useDispatch","useState","roomName","room","setRoomName","className","required","placeholder","type","onChange","event","target","value","onClick","preventDefault","to","InfoBar","href","Input","message","setMessage","sendMessage","onKeyPress","key","Message","user","text","date","trim","toLowerCase","moment","isSame","format","diff","MessagesShowCase","messages","followButtonClassName","map","msg","i","ChatRoom","setMessages","ENDPOINT","useEffect","queryString","parse","search","io","transports","emit","disconnect","off","on","pathname","App","path","exact","component","ReactDOM","render","StrictMode","store","document","querySelector"],"mappings":"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","file":"static/js/main.382145f8.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport queryString from \"query-string\";\r\nimport io from \"socket.io-client\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport InfoBar from \"./components/InfoBar\";\r\nimport Input from \"./components/Input\";\r\nimport MessagesShowCase from \"./components/MessagesShowCase\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nlet socket;\r\n\r\nconst ChatRoom = ({ location }) => {\r\n  const name = useSelector((state) => state.username).username;\r\n  const [room, setRoomName] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const ENDPOINT = \"https://kinda-real-time-chat.herokuapp.com/\";\r\n\r\n  useEffect(() => {\r\n    const { room } = queryString.parse(location.search);\r\n\r\n    socket = io(ENDPOINT, { transports: [\"websocket\"] });\r\n\r\n    setRoomName(room);\r\n\r\n    socket.emit(\"join\", { name, room }, () => {});\r\n\r\n    return () => {\r\n      socket.disconnect();\r\n\r\n      socket.off();\r\n    };\r\n  }, [ENDPOINT, location.search]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"message\", (message) => {\r\n      setMessages([...messages, message]);\r\n    });\r\n  }, [messages]);\r\n\r\n  const sendMessage = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (message) {\r\n      socket.emit(\"sendMessage\", message, () => setMessage(\"\"));\r\n    }\r\n  };\r\n\r\n  if (!name)\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: \"/\",\r\n          state: { roomName: queryString.parse(location.search).room },\r\n        }}\r\n      />\r\n    );\r\n  return (\r\n    <div className=\"h-screen bg-green-200 flex justify-center items-center\">\r\n      <div className=\"flex flex-col justify-between h-2/4 w-6/12 2xl:w-4/12 mx-auto bg-gray-200\">\r\n        <InfoBar room={room}></InfoBar>\r\n        <MessagesShowCase\r\n          messages={messages}\r\n          name={name}\r\n          className=\"h-full\"\r\n        ></MessagesShowCase>\r\n        <Input\r\n          message={message}\r\n          setMessage={setMessage}\r\n          sendMessage={sendMessage}\r\n        ></Input>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatRoom;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const userNameHandler = createSlice({\r\n  name: \"username\",\r\n  initialState: {\r\n    username: null,\r\n  },\r\n  reducers: {\r\n    setUserName: (state, action) => {\r\n      state.username = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setUserName } = userNameHandler.actions;\r\n\r\nexport default userNameHandler.reducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport userNameReducer from \"./features/userNameSlice\";\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    username: userNameReducer,\r\n  },\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setUserName } from \"../../store/features/userNameSlice\";\r\n\r\nconst Join = ({ location }) => {\r\n  const name = useSelector((state) => state.username);\r\n  const dispatch = useDispatch();\r\n  const [room, setRoomName] = useState(\r\n    location?.state?.roomName ? location?.state?.roomName : \"\"\r\n  );\r\n\r\n  return (\r\n    <div className=\"w-full h-screen bg-black bg-opacity-80\">\r\n      <div className=\"h-full flex flex-col justify-center items-center\">\r\n        <div className=\"font-thin text-2xl text-gray-200 w-2/12 text-center py-2 border-b\">\r\n          <h1>Join</h1>\r\n        </div>\r\n        <input\r\n          required\r\n          className=\"w-2/12 my-4 shadow rounded py-2 px-3 bg-gray-200 placeholder-gray-600 font-thin\"\r\n          placeholder=\"Enter your name\"\r\n          type=\"text\"\r\n          onChange={(event) => dispatch(setUserName(event.target.value))}\r\n        />\r\n        <input\r\n          required\r\n          className=\"w-2/12 shadow rounded py-2 px-3 bg-gray-200 placeholder-gray-600 font-thin\"\r\n          placeholder=\"Enter room name\"\r\n          value={room}\r\n          type=\"text\"\r\n          onChange={(event) => setRoomName(event.target.value)}\r\n        />\r\n        <Link\r\n          onClick={(event) => (!name || !room ? event.preventDefault() : null)}\r\n          to={`/chat?room=${room}`}\r\n        >\r\n          <button\r\n            className=\"focus:outline-none outline-none my-4 border py-2 px-8 rounded-xl text-gray-200 hover:bg-white hover:text-gray-700\"\r\n            type=\"submit\"\r\n          >\r\n            Join chat\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Join;\r\n","import React from \"react\";\r\nimport { AiFillWechat, AiOutlineCloseCircle } from \"react-icons/ai\";\r\n\r\nconst InfoBar = ({ room }) => (\r\n  <div className=\"w-full mx-auto h-1/6\">\r\n    <div className=\"w-full flex flex-row justify-between bg-green-400 text-gray-100\">\r\n      <div className=\"flex flex-row\">\r\n        <div className=\"text-4xl p-2\">\r\n          <AiFillWechat />\r\n        </div>\r\n        <h3 className=\"align-middle my-auto\">{room}</h3>\r\n      </div>\r\n      <div className=\"my-auto px-4\">\r\n        <a href=\"/\" className=\"text-gray-100 text-xl\">\r\n          <AiOutlineCloseCircle className=\"mx-auto\" />\r\n        </a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default InfoBar;\r\n","import React from \"react\";\r\n\r\nimport { AiOutlineSend } from \"react-icons/ai\";\r\nimport { GrEmoji } from \"react-icons/gr\";\r\n\r\nconst Input = ({ message, setMessage, sendMessage }) => {\r\n  return (\r\n    <div>\r\n      <div className=\"flex flex-row w-full relative\">\r\n        <input\r\n          value={message}\r\n          onChange={(event) => setMessage(event.target.value)}\r\n          onKeyPress={(event) =>\r\n            event.key === \"Enter\" ? sendMessage(event) : null\r\n          }\r\n          type=\"text\"\r\n          placeholder=\"Start typing...\"\r\n          className=\"w-full p-2 focus:outline-none\"\r\n        />\r\n        <button className=\"absolute z-10 right-8 text-2xl text-green-600 p-2 focus:outline-none\">\r\n          <GrEmoji />\r\n        </button>\r\n        <button\r\n          onClick={(event) => sendMessage(event)}\r\n          className=\"absolute right-0 z-10 text-2xl text-green-600 p-2 focus:outline-none\"\r\n        >\r\n          <AiOutlineSend />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import moment from \"moment\";\r\n\r\nconst Message = ({ message: { user, text, date }, name }) =>\r\n  user === name.trim().toLowerCase() ? (\r\n    <div className=\"flex justify-end p-2\">\r\n      <div className=\"w-5/12 bg-green-200 bg-opacity-80 rounded-xl py-1 px-2\">\r\n        <div className=\"flex flex-row justify-between\">\r\n          <p className=\"font-thin text-sm text-right\">{user}</p>\r\n        </div>\r\n        <div>\r\n          <p className=\"text-sm\">{text}</p>\r\n        </div>\r\n        <div className=\"mx-auto text-right\">\r\n          <span className=\"font-thin text-xs\">\r\n            {/* Add check for date */}\r\n            {/* Add check for date */}\r\n            {moment(moment()).isSame(date, \"day\")\r\n              ? moment(date).format(\"LT\")\r\n              : moment().diff(date, \"days\") === 0\r\n              ? \"Yesterday\"\r\n              : moment().diff(date, \"days\") <= 7\r\n              ? moment(date).format(\"ddd, h:mm\")\r\n              : moment().diff(date, \"years\") === 0\r\n              ? moment(date).format(\"MMM Do\")\r\n              : moment(date).format(\"MMM Do YYYY\")}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : user === \"admin\" ? (\r\n    <div className=\"font-thin text-sm text-center\">{text}</div>\r\n  ) : (\r\n    <div className=\"flex justify-start p-2\">\r\n      <div className=\"w-5/12 bg-green-100 bg-opacity-80 rounded-xl py-1 px-2\">\r\n        <div className=\"flex flex-row justify-between\">\r\n          <p className=\"font-thin text-sm text-left\">{user}</p>\r\n        </div>\r\n        {/* <p className=\"font-thin text-sm\">{user}</p> */}\r\n        <div>\r\n          <p className=\"text-sm\">{text}</p>\r\n        </div>\r\n        <div className=\"mx-auto text-right\">\r\n          <span className=\"font-thin text-xs\">\r\n            {/* Add check for date */}\r\n            {/* Add check for date */}\r\n            {moment(moment()).isSame(date, \"day\")\r\n              ? moment(date).format(\"LT\")\r\n              : moment().diff(date, \"days\") === 0\r\n              ? \"Yesterday\"\r\n              : moment().diff(date, \"days\") <= 7\r\n              ? moment(date).format(\"ddd, h:mm\")\r\n              : moment().diff(date, \"years\") === 0\r\n              ? moment(date).format(\"MMM Do\")\r\n              : moment(date).format(\"MMM Do YYYY\")}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\n\r\nimport ScrollToBottom from \"react-scroll-to-bottom\";\r\n\r\nimport Message from \"./Message\";\r\nimport \"./index.css\";\r\n\r\nconst MessagesShowCase = ({ messages, name }) => (\r\n  <ScrollToBottom\r\n    followButtonClassName={\"ScrollToBottomBtn\"}\r\n    className=\"w-full h-full overflow-hidden\"\r\n  >\r\n    {messages.map((msg, i) => (\r\n      <div key={i}>\r\n        <Message message={msg} name={name} />\r\n      </div>\r\n    ))}\r\n  </ScrollToBottom>\r\n);\r\n\r\nexport default MessagesShowCase;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Join from \"./components/Join/index.js\";\nimport ChatRoom from \"./components/ChatRoom/index.js\";\n\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact component={Join} />\n        <Route path=\"/chat\" component={ChatRoom} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}